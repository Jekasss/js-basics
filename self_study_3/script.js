/*
операторы сравнения возвращают значение логического типа: true или false
*/
console.log (2 > 1);   // больше/меньшеменьше
console.log (2 >= 1);  // больше/меньше или равно
console.log (2 != 1);  // не равно
console.log (2 == 1);  // нестрогое равенство

let a = 5 > 3;         // результат true
console.log (a);
console.log ("----------");
/*
Сравнение строк
Строки в js сравниваются посимвольно.
т.е. Б > А, В > Б и т.д.
Алгоритм сравнения:
1. сравниваются первые символы
2. если один из них больше, то та строка в которой он находится больше второй
3. если символы равны, продолжается сравнение следующих символов.
4. Савнение продолжается пока не закончится одна из строк
5. если обе строки заканчиваются одновременно, то они равные. Иначе большей считается более длинная
*/

console.log ("Н" > "А"); 
console.log ("Стул" > "Стол");

// При сравнении используется Unicode, а не алфавит
// Заглавные буквы не равны строчным
console.log ("а" > "А");
console.log ("н" > "h");
console.log ("----------");

// При сравнении разных типов js приводит их в числу

console.log ("3" == 3);
console.log ("007" == 7);

// Логические значения true и false становятся 1 и 0 соответственно

/*
Нестрогое равенство приводит операнды к числу
Строгое равенство проверяет сначала типы значений
Если они разные возвращет false
*/

console.log (0 === false); // false т.к. разные типы
console.log ("----------");

/*
null и undefined при строгом и нестрогом равенстве дают разные результаты
при строгом они не равны, при нестрогом они равны друг другу и неравны другим значениям
*/

console.log (null == undefined);
console.log (null === undefined);

// null приводится к 0, undefined к NaN
// при сравнении null и 0 странный результат
console.log (null > 0);  // false
console.log (null == 0); // false
console.log (null >= 0); // true
// происходит из-за того, что нестрогое равенство и сравнение работают по-разному
console.log ('----------');

// undefined не сравнимо с другими значениями
console.log (undefined < 0);
console.log (undefined > 0);
console.log (undefined == 0);

/*
1 и 2 возвращают false потому что они преобразуют undefined
в NaN - возвращает false при любых сравнениях
3 возвращает false потому что равно только себе и null
*/


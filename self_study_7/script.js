// Циклы
/*
 While - цикл с предусловием
сначала проверяется условие, затем выполняется тело цикла
до тех пор пока условие не вернёт false
В цикле с предусловием может не быть ни одной итерации(одно повторение цикла)
*/
/* 
let a = 0;
while (a < 6) {
    console.log (a);
    a++
};
 */
//условием может быть так же любое выражение или переменная

/* 
Do while - цикл с постусловием
Сначала выполняется первая итерация, затем проверяется условие
в данном случае всегда будет выполняться минимум одна итерация
*/
/* 
let b = 100;
do {
    console.log (b);
    b++
} while (b < 101);
 */
// for цикл с заданным количеством итераций

/*
1.Выполняется инициализация
2.Проверяется условие
3.Выполняется тело цикла
4.Выполняется шаг
5.Проверяется условие
6.Выполняется тело цикла
7.Выполняется шаг
...
...
...

for (инициализация; условие; шаг) {
    ...тело цикла...
}
*/
/* 
let c;
for (c = 500; c < 502; c++) {
    console.log (c);
}
console.log (c);
 */
//если переменную объявить прямо в цикле, то она будет доступна только в самом цикле
/* 
for (let d = 500; d < 502; d++) {
    console.log (d);
}
 */
// console.log (d); ошибка

/* 
Прерывание цикла
Обычно цикл завершается когда условие возвращает false
Если необходимо можно прорвать цикл при помощи break
*/
/*
let sum = 0;
while (true) {
    let value = +prompt ("Введите число");
    if (!value) break;
    sum += value;
}

alert ("Сумма:" + sum);
*/
/* 
Данный цикл считает сумму вводимых чисел до тех пор
пока не будет введено не число
Далее цикл завершается и выводится значение переменной sum
*/

/* 
Пропуск итерации
Даннsq оператор не останавливает цикл,
а только прерывает итерацию и переходит к следующей
*/
/*
for (let d = 0; d < 15; d++) {
    if (d % 2 != 0) continue;

    console.log (d);
}
*/
/*
Операторы break и continue нельзя использовать с оператором "?"
Данные конструкции не являются выражениями
Если код:
if (i > 5) {
    alert(i);
} else {
    continue;
}

и переписать на:

(i > 5) ? alert(i) : continue 

это вызовет синтаксическую ошибку
*/

/*
Метки
Иногда необходимо ввыйти из нескольких уровней цикла сразу.
Break прервёт только внутренний цикл
для прерывания внешнего цикла необходимо использовать метки
Метка имеет вид идентификатора с двоеточием перед циклом

mark: for (...) {
    ...
}
*/
/* 
out: for (let i = 0; i < 3; i++) {
        for (let j = 0; j < 3; j++) {
            let input = prompt (`Значение на координатах (${i},${j})`, "");
        if (!input) break out;
        }
}

alert('Готово!')
 */
// метки так же модно использовать с оператором continue
/* 
for (a = 2; a <= 10; a++) {
    if (a % 2 != 0) {
        continue;
    }
    console.log (a);
}
*/
/* 
let y = 0;

while (y < 3) {
    console.log(`number ${y}`);
    y++;
}
*/
/* 
let i;
do {
    i = +prompt ('введите число больше 100');
} while (i <= 100 && i);

*/
/* 
let n = 10;

nextPrime:
for (let i = 2; i <= n; i++) {
    for (let j = 2; j < i; j++) {
        if (i % j == 0) {
            continue nextPrime;
        }
    }
    console.log (i);
}
*/